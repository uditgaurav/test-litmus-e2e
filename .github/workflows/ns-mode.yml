---
name: Namespace-Mode-Pipeline
on:
  workflow_dispatch:
    inputs:
      e2eTestImage:
        default: "litmuschaos/litmus-e2e:ci"
      goExperimentImage:
        default: "litmuschaos/go-runner:ci"
      libImage:
        default: "litmuschaos/go-runner:ci"
      operatorImage:
        default: "litmuschaos/chaos-operator:ci"
      runnerImage:
        default: "litmuschaos/chaos-runner:ci"
      chaosNamespace:
        default: "chaos"
      imagePullPolicy:
        default: "Always"
      experimentImagePullPolicy:
        default: "Always"
      chaosServiceAccount:
        default: "litmus-ns-exp-sa"

defaults:
  run:
    working-directory: /go/src

jobs:

  Pod_Delete_Namespace_Mode:
    container:
      image: "${{ github.event.inputs.e2eTestImage }}"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:rw      
      env:
        OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
        RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
        IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"
        CHAOS_NAMESPACE: "${{ github.event.inputs.chaosNamespace }}"
        APP_NS: "${{ github.event.inputs.chaosNamespace }}"
        CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"

    runs-on: ubuntu-18.04
    steps:

      - run: |
          apk add --update curl && rm -rf /var/cache/apk/*
          apk add --update docker openrc && rc-update add docker boot

      #Install and configure a kind cluster
      - name: Installing KinD cluster for the test
        uses: engineerd/setup-kind@v0.5.0
        with:
            version: "v0.7.0"

      - name: Configuring and testing the Installation
        run: |
          kubectl taint nodes kind-control-plane node-role.kubernetes.io/master-
          kind get kubeconfig --internal >$HOME/.kube/config
          kubectl cluster-info --context kind-kind
          kubectl get nodes 
          
      - name: Install Litmus In Namespace Mode
        run: |
          make build-litmus-ns-mode

      - name: Create nginx deployment in chaos namespace
        run: |
          kubectl create ns ${APP_NS}
          kubectl create deploy nginx --image=nginx:alpine --replicas 3 -n ${APP_NS}
          kubectl wait --for=condition=Ready pods --all --namespace ${APP_NS} --timeout=180s
          kubectl annotate deploy/nginx litmuschaos.io/chaos="true" -n ${APP_NS} --overwrite

      - name: Running Pod Delete Tests
        run: make pod-delete
